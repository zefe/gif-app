{"version":3,"sources":["componets/AddCategory.jsx","helpers/getGifs.js","componets/GifGridItem.jsx","componets/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","console","log","target","placeholder","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC7CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBa,SAACP,GACtBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAeE,EAAEU,OAAOJ,QAmBhBK,YAAY,a,uBC1BfC,EAAO,uCAAG,WAAOR,GAAP,uBAAAS,EAAA,6DACfC,EADe,iDACiCC,UACpDX,GAFmB,+DAIFY,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCAL,SAASO,EAAT,GAAwC,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAC1C,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,EAAL,MCFL,IAAMO,EAAU,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EAEfR,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAqBzC,OAdAC,qBAAW,WAEPvB,EAAQR,GACHgC,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAC5B,IAEI6B,EDlByBK,CAAclC,GAAlCqB,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAGrB,OACI,oCACI,4BAAM5B,GACJ4B,GAAW,yCACb,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAACK,EAAD,eACIY,IAAKjB,EAAIC,IACLD,UEajBkB,EA3BM,WAAO,IAAD,EACW5C,mBAAS,CAAC,YADrB,mBAClB6C,EADkB,KACN9C,EADM,KAIzB,OACI,6BACA,uDACE,yBAAKiC,UAAU,UAEb,kBAAC,EAAD,CAAajC,cAAgBA,KAE/B,6BAEA,4BAEI8C,EAAWpB,KAAI,SAACjB,GAAD,OACb,kBAAC,EAAD,CACEmC,IAAKnC,EACLA,SAAUA,U,MCf1BsC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.b0242762.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChage = (e) => {\n        console.log(e.target.value)\n        setInputValue( e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            /* no se tiene acceso a las categorias porque no lo paso como argumento, \n            con solo mandar la referencia al setCategories que puede llamar con un callback que tiene el estado anterior*/\n            setCategories((category) => [ inputValue, ...category]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={handleInputChage}\n                placeholder=\"search\"\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from \"react\";\n\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=20&api_key=OQnFnnvDJKrVc3nhgX9b3eT9qbtV7Ahv`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react'\n\nexport default function GifGridItem( { title, url } ) {\n    return (\n        <div className=\"card animate__animated animate__bounce \">\n            <img src={url} alt={title}/>\n            <p>{ title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n   const { data: images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p>Loading...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const  useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return  state;\r\n}\r\n","import React, { useState} from \"react\";\nimport { AddCategory } from \"./componets/AddCategory\";\nimport { GifGrid } from \"./componets/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['pokemon'])\n\n\n  return(\n      <div>\n      <h1>Find your favorite gifs</h1>\n        <div className=\"header\">\n          \n          <AddCategory setCategories={ setCategories } />\n        </div>\n        <hr/>\n\n        <ol>\n          {\n            categories.map((category) => ( \n              <GifGrid\n                key={category}\n                category={category}\n                />\n            ))\n          }\n        </ol>\n      </div>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}